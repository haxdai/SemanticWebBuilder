<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="wizardTop.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="cancel.Text">
    <value>Cancel</value>
  </data>
  <data name="back.Text">
    <value>&lt; Back</value>
  </data>
  <data name="next.Text">
    <value>Next &gt;</value>
  </data>
  <data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Inherit</value>
  </data>
  <data name="$this.Text">
    <value>Type of presentation to publish</value>
  </data>
</root>