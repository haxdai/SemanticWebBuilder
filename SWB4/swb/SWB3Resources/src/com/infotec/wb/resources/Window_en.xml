<?xml version="1.0" encoding="ISO-8859-1"?>
<admresource xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<xslfile>admresource.xslt</xslfile>
	<form name="frmVentana" action="true" method="POST" enctype="multipart/form-data">
		<admdbconnmgr defconn="true"/>
		<statictext name="general">
			<![CDATA[
				<font style="color: #428AD4; text-decoration: none; font-family: Verdana; font-size: 12px; font-weight: normal;">
				Step 1 of 2. General data</font>
			]]>
		</statictext>		
		<input type="TEXT" name="title" label="Title:" size="50"/>
		<textarea name="text" label="* Text:" rows="5" cols="50" wrap="virtual"/>
		<input type="FILE" name="img" label="* Image for content (bmp, gif, jpg, jpeg, swf):" showfile="true" msg="Current image " filetype="bmp|jpg|jpeg|gif|swf" isshowfiletype="true" isremovefile="true" removemsg="Remove image" size="40"/>
		<input type="TEXT" name="alt" label="Alternate text for image:" size="50"/>
		<input type="TEXT" name="url" label="Web address" size="50"/>				
		<statictext name="txtTarget">Window to display:</statictext>
		<input type="RADIO" name="target" label="In the same window" value="0"/>
		<input type="RADIO" name="target" label="In the original window and close the pop-up window" value="1" />
		<input type="RADIO" name="target" label="In the original window and do not close the pop-up window" value="2" />
		<input type="RADIO" name="target" label="In a new window and close the pop-up window" value="3" />
		<input type="RADIO" name="target" label="In a new window and do not close the  pop-up window" value="4" />
		<input type="CHECKBOX" name="bysession" label="Open window by session" value="yes"/>		
		<applet label="Text color:" name="wbcolor" code="applets.selcolor.SelColor.class" codebase="{@webpath}" archive="wbadmin/lib/SelColor.jar" width="293" height="240">
			<param name="name" value="wbcolor"/>
			<param name="cache_archive" value="wbadmin/lib/SelColor.jar"/>
			<param name="_cache_version" value="1.0.0.1"/>
			<param name="_cache_archive_ex" value="applet.jar;preload, util.jar;preload,tools.jar;preload"/>
			<param name="type" value="application/x-java-applet;version=1.4"/>
			<param name="scriptable" value="true"/>
			<param name="webpath" value="/"/>
			<param name="foreground" value="99cccc"/>
			<param name="background" value="99cccc"/>
			<param name="linkcolor" value="000000" input="textcolor" moreattr="replace('#','')"/>
			<param name="linkactual" value="000000" input="textcolor"/>
		</applet>
		<input type="HIDDEN" name="textcolor"/>
		<input type="TEXT" size="7" maxlength="7" name="hdntextcolor" label="Other text color (hexadecimal):"/>		
		<input type="FILE" name="backimg" label="Background image (bmp, gif, jpg, jpeg):" showfile="true" msg="Current image " filetype="bmp|jpg|jpeg|gif" isshowfiletype="true" isremovefile="true" removemsg="Remove image" size="40"/>
		<applet label="Background color:" name="wbbgcolor" code="applets.selcolor.SelColor.class" codebase="{@webpath}" archive="wbadmin/lib/SelColor.jar" width="293" height="240">
			<param name="name" value="wbbgcolor"/>
			<param name="cache_archive" value="wbadmin/lib/SelColor.jar"/>
			<param name="_cache_version" value="1.0.0.1"/>
			<param name="_cache_archive_ex" value="applet.jar;preload, util.jar;preload,tools.jar;preload"/>
			<param name="type" value="application/x-java-applet;version=1.4"/>
			<param name="scriptable" value="true"/>
			<param name="webpath" value="/"/>
			<param name="foreground" value="99cccc"/>
			<param name="background" value="99cccc"/>
			<param name="linkcolor" value="000000" input="backcolor" moreattr="replace('#','')"/>
			<param name="linkactual" value="000000" input="backcolor"/>
		</applet>
		<input type="HIDDEN" name="backcolor"/>
		<input type="TEXT" size="7" maxlength="7" name="hdnbackcolor" label="Other background color (hexadecimal):"/>		
		<statictext name="window">
			<![CDATA[
				<br><br><font style="color: #428AD4; text-decoration: none; font-family: Verdana; font-size: 12px; font-weight: normal;">
				Step 2 of 2. Window configuration</font>
			]]>
		</statictext>
		<input type="CHECKBOX" name="menubar" label="Menu bar" value="1"/>
		<input type="CHECKBOX" name="toolbar" label="Tool bar" value="1"/>
		<input type="CHECKBOX" name="status" label="Status bar" value="1"/>
		<input type="CHECKBOX" name="location" label="Addresses bar" value="1"/>
		<input type="CHECKBOX" name="directories" label="Links bar" value="1"/>
		<input type="CHECKBOX" name="scrollbars" label="Scroll bars" value="1"/>
		<input type="CHECKBOX" name="resizable" label="Readjust window size" value="1"/>
		<input type="TEXT" name="width" label="Window width (pixels):" size="4" maxlength="4" jsvaltype="js_numbers"/>
		<input type="TEXT" name="height" label="Window height (pixels):" size="4" maxlength="4" jsvaltype="js_numbers"/>
		<input type="TEXT" name="top" label="Top margin position (pixels):" size="4" maxlength="4" jsvaltype="js_numbers"/>
		<input type="TEXT" name="left" label="Left margin position (pixels):" size="4" maxlength="4" jsvaltype="js_numbers"/>
		<input type="SUBMIT" name="btnSave"  value="Save" onclick="if(jsValida(this.form)) return true; else return false;"/>
		<input type="RESET"  name="btnReset" value="Cancel"/>
	</form>
	<statictext name="txtNote">
		<![CDATA[
			<font style="color: #428AD4; font-family: Verdana; font-size: 10px;">
				* Please indicate the window text and/or an image.
			</font>
		]]>
	</statictext>
	<script language="JavaScript">
		<![CDATA[
			if(!document.frmVentana.target[0].checked && !document.frmVentana.target[1].checked && 
				!document.frmVentana.target[2].checked && !document.frmVentana.target[3].checked && 
				!document.frmVentana.target[4].checked)
				document.frmVentana.target[4].checked=true;


			function jsValida(frm)
			{
				if(frm.text.value==null || frm.text.value=='' || frm.text.value==' ')
				{
					if(frm.wbfile_img==undefined && (frm.img.value==null || frm.img.value=='' || frm.img.value==' '))
					{
						alert('Please indicate the window text and/or an image.');
						frm.text.focus();
						return false;
					}					
				}
				if(frm.hdntextcolor.value==null || frm.hdntextcolor.value=='' || frm.hdntextcolor.value==' ')
					frm.textcolor.value='#'+ document.wbcolor.getColor();
				else frm.textcolor.value=frm.hdntextcolor.value;

				if(frm.hdnbackcolor.value==null || frm.hdnbackcolor.value=='' || frm.hdnbackcolor.value==' ')
					frm.backcolor.value='#'+ document.wbbgcolor.getColor();
				else frm.backcolor.value=frm.hdnbackcolor.value;

				if(!isFormat(frm.textcolor)) return false;
				if(!isFormat(frm.backcolor)) return false;
				replaceChars(frm.text);	
				return true;
			}
			function isFormat(pIn)
			{
				var swFormat="0123456789ABCDEF";
				pIn.value=pIn.value.toUpperCase();
				if(pIn.value.length<7)
				{
					alert('The field lenght does not correspond to the format.');
					if(pIn.type=="text") pIn.focus();
					return false;
				}
				if (!setPrefix(pIn, '#')) return false;
				for(var i=1; i < pIn.value.length; i++)
				{
					swOk= pIn.value.substring(i, i+1);
					if (swFormat.indexOf(swOk, 0)==-1)
					{
						alert('The value defined does not correspond to the hexadecimal format.');
						if(pIn.type=="text") pIn.focus();
						return false;
					}
				}
				return true;
			}
			function setPrefix(pIn, pPx)
			{
				if(pIn.type=="text" || pIn.type=="hidden")
				{
					if (pIn.value.substring(0, pPx.length).indexOf(pPx)==-1)
					{
						alert('The value defined does not correspond to the format: ' + pPx);
						pIn.value=pPx+pIn.value;
						if(pIn.type=="text") pIn.focus();
						return false;
					}
				}
				if(pIn.type=="select-one" || pIn.type=="select-multiple")
				{
					for(var i=0; i<pIn.length; i++)
					{
						if (pIn.options[i].value.substring(0, pPx.length).indexOf(pPx)==-1)
						{
							alert('The value defined does not correspond to the format: ' + pPx);
							pIn.focus();
							return false;
						}
					}
				}
				return true;
			}
			function replaceChars(pIn)
			{
				out = "\r"; // replace this
				add = "<br/>"; // with this
				temp = "" + pIn.value; // temporary holder
				while (temp.indexOf(out)>-1)
				{
					pos= temp.indexOf(out);
					temp = "" + (temp.substring(0, pos) + add + temp.substring((pos + out.length), temp.length));
				}
				out = "\n"; // replace this
				add = " "; // with this
				temp = "" + temp; // temporary holder
				while (temp.indexOf(out)>-1)
				{
					pos= temp.indexOf(out);
					temp = "" + (temp.substring(0, pos) + add + temp.substring((pos + out.length), temp.length));
				}
				pIn.value = temp;
			}			
		]]>
	</script>
</admresource>
