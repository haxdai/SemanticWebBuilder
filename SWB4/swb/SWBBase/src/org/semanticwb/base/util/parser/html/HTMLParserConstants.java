/**  
* SemanticWebBuilder es una plataforma para el desarrollo de portales y aplicaciones de integración, 
* colaboración y conocimiento, que gracias al uso de tecnología semántica puede generar contextos de 
* información alrededor de algún tema de interés o bien integrar información y aplicaciones de diferentes 
* fuentes, donde a la información se le asigna un significado, de forma que pueda ser interpretada y 
* procesada por personas y/o sistemas, es una creación original del Fondo de Información y Documentación 
* para la Industria INFOTEC, cuyo registro se encuentra actualmente en trámite. 
* 
* INFOTEC pone a su disposición la herramienta SemanticWebBuilder a través de su licenciamiento abierto al público (‘open source’), 
* en virtud del cual, usted podrá usarlo en las mismas condiciones con que INFOTEC lo ha diseñado y puesto a su disposición; 
* aprender de él; distribuirlo a terceros; acceder a su código fuente y modificarlo, y combinarlo o enlazarlo con otro software, 
* todo ello de conformidad con los términos y condiciones de la LICENCIA ABIERTA AL PÚBLICO que otorga INFOTEC para la utilización 
* del SemanticWebBuilder 4.0. 
* 
* INFOTEC no otorga garantía sobre SemanticWebBuilder, de ninguna especie y naturaleza, ni implícita ni explícita, 
* siendo usted completamente responsable de la utilización que le dé y asumiendo la totalidad de los riesgos que puedan derivar 
* de la misma. 
* 
* Si usted tiene cualquier duda o comentario sobre SemanticWebBuilder, INFOTEC pone a su disposición la siguiente 
* dirección electrónica: 
*  http://www.semanticwebbuilder.org
**/ 
 
/* Generated By:JavaCC: Do not edit this line. HTMLParserConstants.java */
package org.semanticwb.base.util.parser.html;

public interface HTMLParserConstants
{

    int EOF = 0;
    int TagName = 1;
    int DeclName = 2;
    int Comment1 = 3;
    int Comment2 = 4;
    int Word = 5;
    int LET = 6;
    int NUM = 7;
    int Entity = 8;
    int Space = 9;
    int SP = 10;
    int Punct = 11;
    int ArgName = 12;
    int ArgEquals = 13;
    int TagEnd = 14;
    int ArgValue = 15;
    int ArgQuote1 = 16;
    int ArgQuote2 = 17;
    int Quote1Text = 19;
    int CloseQuote1 = 20;
    int Quote2Text = 21;
    int CloseQuote2 = 22;
    int CommentText1 = 23;
    int CommentEnd1 = 24;
    int CommentText2 = 25;
    int CommentEnd2 = 26;

    int DEFAULT = 0;
    int WithinTag = 1;
    int AfterEquals = 2;
    int WithinQuote1 = 3;
    int WithinQuote2 = 4;
    int WithinComment1 = 5;
    int WithinComment2 = 6;

    String[] tokenImage = {
        "<EOF>",
        "<TagName>",
        "<DeclName>",
        "\"<!--\"",
        "\"<!\"",
        "<Word>",
        "<LET>",
        "<NUM>",
        "<Entity>",
        "<Space>",
        "<SP>",
        "<Punct>",
        "<ArgName>",
        "\"=\"",
        "<TagEnd>",
        "<ArgValue>",
        "\"\\\'\"",
        "\"\\\"\"",
        "<token of kind 18>",
        "<Quote1Text>",
        "<CloseQuote1>",
        "<Quote2Text>",
        "<CloseQuote2>",
        "<CommentText1>",
        "\"-->\"",
        "<CommentText2>",
        "\">\"",
    };

}
