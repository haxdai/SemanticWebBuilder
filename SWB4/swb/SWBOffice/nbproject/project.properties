build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/SWBOffice.jar
dist.javadoc.dir=${dist.dir}/javadoc
excludes=
file.reference.jcr-1.0.jar=..\\lib\\jcr-1.0.jar
file.reference.servlet.jar=..\\lib\\servlet.jar
includes=**
jar.compress=false
javac.classpath=\
    ${reference.SWBBase.jar}:\
    ${reference.SWBPlatform.jar}:\
    ${file.reference.servlet.jar}:\
    ${reference.SWBPortal.jar}:\
    ${reference.SWBModel.jar}:\
    ${reference.OfficeComunicationInterfaces.jar}:\
    ${file.reference.jcr-1.0.jar}:\
    ${reference.SWBJCR170.jar}:\
    ${reference.RepositoryManager.jar}:\
    ${reference.XMRPCServer.jar}:\
    ${reference.XMLRPCCommon.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
project.OfficeComunicationInterfaces=../../Client/OpenOffice/OfficeComunicationInterfaces
project.RepositoryManager=../../RepositoryManager
project.SWBBase=../SWBBase
project.SWBJCR170=../SWBJCR170
project.SWBModel=../SWBModel
project.SWBPlatform=../SWBPlatform
project.SWBPortal=../SWBPortal
project.XMLRPCCommon=../../Client/XMLRPCCommon
project.XMRPCServer=../../Client/XMRPCServer
reference.OfficeComunicationInterfaces.jar=${project.OfficeComunicationInterfaces}/dist/OfficeComunicationInterfaces.jar
reference.RepositoryManager.jar=${project.RepositoryManager}/dist/RepositoryManager.jar
reference.SWBBase.jar=${project.SWBBase}/dist/SWBBase.jar
reference.SWBJCR170.jar=${project.SWBJCR170}/dist/SWBJCR170.jar
reference.SWBModel.jar=${project.SWBModel}/dist/SWBModel.jar
reference.SWBPlatform.jar=${project.SWBPlatform}/dist/SWBPlatform.jar
reference.SWBPortal.jar=${project.SWBPortal}/dist/SWBPortal.jar
reference.XMLRPCCommon.jar=${project.XMLRPCCommon}/dist/XMLRPCCommon.jar
reference.XMRPCServer.jar=${project.XMRPCServer}/dist/XMRPCServer.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
