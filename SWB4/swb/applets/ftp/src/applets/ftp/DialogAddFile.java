/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DialogAddFile.java
 *
 * Created on 19/04/2012, 11:10:51 AM
 */
package applets.ftp;

import java.net.URL;
import java.util.Locale;

/**
 *
 * @author victor.lorenzana
 */
public class DialogAddFile extends javax.swing.JDialog
{

    private final java.io.File dirlocal;
    private final ftp ftp;
    private final Directory dir;

    /** Creates new form DialogAddFile */
    public DialogAddFile(java.awt.Frame parent, java.io.File dirlocal, ftp ftp, Directory dir)
    {
        super(parent, true);
        initComponents();
        this.dirlocal = dirlocal;
        this.dir = dir;
        java.io.File[] files =
        {
            dirlocal
        };
        this.ftp = ftp;
        this.setTitle(dirlocal.getName() + " ...");
        int count = getCount(files);
        this.jProgressBar2.setMaximum(count);
        //setLocation(400, 300);
        //setSize(200, 50);
        setLocationRelativeTo(null);
    }

    public void addDir()
    {       
        Worker w = new Worker(this, dir, dirlocal);
        w.start();
        this.setVisible(true);
    }

    private int getCount(java.io.File[] files)
    {

        int count = files.length;
        for (java.io.File file : files)
        {
            java.io.File[] childs = file.listFiles();
            if (childs != null)
            {
                count += getCount(childs);
            }
        }
        return count;
    }

    private class Worker extends Thread
    {

        DialogAddFile dialog;
        Directory dir;
        java.io.File dirlocal;

        public Worker(DialogAddFile dialog, Directory dir, java.io.File dirlocal)
        {
            this.dialog = dialog;
            this.dir = dir;
            this.dirlocal = dirlocal;
        }

        @Override
        public void run()
        {
            boolean siAll = false;
            try
            {
                addDir(dirlocal, dir.getDirectory(), siAll);
                ftp.loadDirectories(dir);
                ftp.updateTreeUI();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
            setVisible(false);
            dispose();
        }

        private boolean addDir(java.io.File dir, String path, boolean siAll) throws Exception
        {
            String pathdir = path + "/" + dir.getName();
            dialog.setText(dir.getName() + " ...");
            siAll = ftp.createDir(pathdir, siAll, dialog);
            dialog.incrementProgressBar();
            java.io.File[] files = dir.listFiles();
            for (int i = 0; i < files.length; i++)
            {
                java.io.File file = files[i];
                String pathchild = pathdir + "/" + file.getName();
                if (file.isDirectory())
                {
                    siAll = addDir(file, pathdir, siAll);
                }
                else
                {
                    dialog.setText(file.getName() + " ...");
                    siAll = ftp.createFile(file, pathchild, siAll, dialog);
                    dialog.incrementProgressBar();
                }
            }
            return siAll;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jProgressBar2 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setResizable(false);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(50, 30));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setPreferredSize(new java.awt.Dimension(282, 20));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jProgressBar2.setPreferredSize(new java.awt.Dimension(146, 20));
        jPanel2.add(jProgressBar2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosed
    {//GEN-HEADEREND:event_formWindowClosed
        //setVisible(false);
        //dispose();
    }//GEN-LAST:event_formWindowClosed

    private void incrementProgressBar()
    {
        int value = this.jProgressBar2.getValue();
        value++;
        this.jProgressBar2.setValue(value);
        this.repaint();
    }

    private void setText(String text)
    {
        this.jLabel1.setText(text);
        this.repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar2;
    // End of variables declaration//GEN-END:variables
}
