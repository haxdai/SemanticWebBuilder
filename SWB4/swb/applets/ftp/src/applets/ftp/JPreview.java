/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPreview.java
 *
 * Created on 14/05/2012, 05:22:42 PM
 */
package applets.ftp;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Image;
import java.io.InputStream;
import java.net.URI;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.JApplet;
import javax.swing.JOptionPane;

/**
 *
 * @author victor.lorenzana
 */
public final class JPreview extends javax.swing.JDialog
{

    Locale locale;
    String jsess;
    String path;
    JApplet applet;
    private String ContextPath;
    private String ApplicationPath;
    URL url;
    ImagePanel panel;
    String originalpath;
    static String[] text_ext={".txt",".css",".jsp",".xslt",".txt",".html",".htm",".xml"};
    static String[] image_ext={".gif",".png",".jpg"};
    /** Creates new form JPreview */
    public JPreview(Dialog parent, Locale locale, URL url, String jsess, String path, JApplet applet, String ContextPath, String ApplicationPath)
    {
        super(parent, true);
        initComponents();
        originalpath = path;
        this.setLocationRelativeTo(null);
        this.ApplicationPath = ApplicationPath;
        this.ContextPath = ContextPath;
        this.locale = locale;
        this.jsess = jsess;
        this.url = url;

        ApplicationPath = new java.io.File(ApplicationPath).getAbsolutePath();
        this.path = path.substring(ApplicationPath.length()).replace('\\', '/').replace("//", "/");
        System.out.println("this.path: " + this.path);
        if (isImage(path))
        {
            try
            {
                URI uribase = applet.getCodeBase().toURI();
                URL urlImage = new URL(ContextPath + this.path);
                URI _urlImage = uribase.resolve(urlImage.toURI());
                System.out.println("urlImage: " + _urlImage.toString());
                Image image = applet.getImage(_urlImage.toURL());
                System.out.println("image: " + image.toString());
                panel = new ImagePanel(image, applet);
                this.jPanel2.add(panel);
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }
        else if (isText(path))
        {

            start();
        }
        pack();

    }

    public JPreview(Locale locale, String jsess, URL url, String path, JApplet applet, String ContextPath, String ApplicationPath)
    {
        super((Frame) null, true);
        initComponents();
        this.setLocationRelativeTo(null);
        this.originalpath = path;
        this.locale = locale;
        this.jsess = jsess;
        this.ApplicationPath = ApplicationPath;
        this.ContextPath = ContextPath;
        this.path = path;
        this.url = url;
        ApplicationPath = new java.io.File(ApplicationPath).getAbsolutePath();
        this.path = path.substring(ApplicationPath.length()).replace('\\', '/').replace("//", "/");

        if (isImage(path))
        {
            try
            {
                URI uribase = applet.getCodeBase().toURI();
                URL urlImage = new URL(uribase.getScheme() + "://" + uribase.getHost() + ":" + uribase.getPort() + "" + ContextPath + this.path);
                Image image = applet.getImage(urlImage);
                int width = image.getWidth(applet);
                int heigth = image.getHeight(applet);
                panel = new ImagePanel(image, applet);

                this.jPanel2.add(panel);
                pack();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }
        else if (isText(path))
        {

            start();
        }
        pack();
    }

    public void showPreview()
    {
        this.setVisible(true);
        
        


    }

    public static boolean isImage(String path)
    {
        for(String img_ext : image_ext)
        {
            if(path.toLowerCase().endsWith(img_ext))
            {
                return true;
            }
        }
        return false;
    }

    public static boolean isText(String path)
    {
        for(String img_ext : text_ext)
        {
            if(path.toLowerCase().endsWith(img_ext))
            {
                return true;
            }
        }
        return false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("applets/ftp/ftp"); // NOI18N
        setTitle(bundle.getString("preview")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton1.setText(bundle.getString("close")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(327, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel2.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    public void start()
    {
        try
        {

            List<Byte> out = new ArrayList<Byte>();
            URLConnection con = url.openConnection();
            con.setUseCaches(false);
            if (jsess != null)
            {
                con.setRequestProperty("Cookie", "JSESSIONID=" + jsess);
            }
            con.addRequestProperty("FTP", "true");
            con.addRequestProperty("PATHFILEWB", originalpath);

            con.setDoInput(true);
            InputStream in = con.getInputStream();
            //String contentLength = con.getHeaderField("Content-Length");
            int ret = in.read();
            while (ret != -1)
            {
                out.add((byte) ret);
                ret = in.read();
            }
            in.close();
            byte[] content = new byte[out.size()];
            int i = 0;
            for (Byte _byte : out)
            {
                content[i] = _byte;
                i++;
            }
            String text = new String(content);
            System.out.println("text: " + text);
            JTextPanel _panel = new JTextPanel(text);
            jPanel2.add(_panel);
            

        }
        catch (Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), java.util.ResourceBundle.getBundle("applets/ftp/ftp", locale).getString("title"), JOptionPane.ERROR_MESSAGE);

        }


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
