"new" = "New"
"file" = "File"
"open" = "Open"
"save" = "Save"
"send" = "Send model"
"export" = "Export"
"exportxpdl" = "Export XPDL"
"print" = "Print"
"about" = "About"
"task" = "Tareas"
"abstractTask" = "Abstract task"
"userTask" = "User task"
"serviceTask" = "Service task"
"ruleTask" = "Business rule task"
"scriptTask" = "Script Taks"
"manualTask" = "Manual task"
"sendTask" = "Send task"
"receiveTask" = "Receive task"
"subTask" = "SubProcesses"
"subProcess" = "SubProcess"
"adhocSubProcess" = "Ad-hoc subprocess"
"eventSubProcess" = "Event subprocess"
"callActivity" = "Call Activity"
"callTask" = "Call Task"
"callManualTask" = "Call Manual Task"
"callScriptTask" = "Call Script Task"
"callUserTask" = "Call User Task"
"callRulelTask" = "Call Business Rule Task"
"callProcess" = "Call Process"
"transaction" = "Transaction"
"startEvents" = "Start events"
"normalStart" = "Start"
"messageStart" = "Message"
"timerStart" = "Timer"
"ruleStart" = "Rule"
"signalStart" = "Signal"
"multipleStart" = "Multiple"
"parallelStart" = "Parallel"
"scalationStart" = "Scalation"
"errorStart" = "Error"
"compensationStart" = "Compensation"
"interEvents" = "Intermediate events"
"messageInterCatch" = "Message Catch"
"messageInterThrow" = "Message Throw"
"timerInter" = "Timer"
"errorInter" = "Error"
"cancelInter" = "Cancel"
"compensationInterCatch" = "Compensation Catch"
"compensationInterThrow" = "Compensation Throw"
"ruleInter" = "Rule"
"linkInterCatch" = "Link Catch"
"linkInterThrow" = "Link Throw"
"signalInterCatch" = "Signal Catch"
"signalInterThrow" = "Signal Throw"
"multInterCatch" = "Multiple Catch"
"multInterThrow" = "Multiple Throw"
"scalInterCatch" = "Scalation Catch"
"scalInterThrow" = "Scalation Throw"
"parallelInter" = "Parallel"
"endEvents" = "End events"
"normalEnd" = "End"
"messageEnd" = "Message"
"errorEnd" = "Error"
"cancelEnd" = "Cancel"
"compensationEnd" = "Compensation"
"signalEnd" = "Signal"
"multipleEnd" = "Multiple"
"scalationEnd" = "Scalation"
"terminateEnd" = "Termination"
"gateways" = "Gateways"
"xorGateway" = "Exclusive data-based"
"orGateway" = "Inclusive data-based"
"xorGatewayStart" = "Exclusive start"
"evtXorGateway" = "Exclusive event-based"
"parallelGateway" = "Parallel"
"parallelGatewayStart" = "Parallel start"
"complexGateway" = "Complex"
"connObjects" = "Connection objects"
"sequenceFlow" = "Sequence flow"
"condFlow" = "Conditional flow"
"defFlow" = "Default flow"
"msgFlow" = "Message flow"
"assocFlow" = "Association"
"dirAssocFlow" = "Directional association"
"artifacts" = "Artifacts"
"textAnnotation" = "Text annotation"
"group" = "Group"
"dataObjs" = "Data objects"
"dataObj" = "Data"
"collection" = "Collection"
"dataInput" = "Data input"
"dataOutput" = "Data output"
"dataStore" = "Data store"
"swimLanes" = "Swimlanes"
"pool" = "Pool"
"lane" = "Lane"
"hideTooltip" = "Hide toolbar"
"showTooltip" = "Show toolbar"
"maximizeTooltip" = "Maximize"
"minimizeTooltip" = "Minimize"
"swpFileFilter" = "SWP files"
"exportFileFilter" = "PNG files"
"xpdlFileFilter" = "XPDL files"
"msgSent" = "Data were sent correctly"
"msgSaveAlert" = "Unsaved changes will be lost, Do you want to continue?"
"alertMsg" = "Alert"
"taskDescription" = "Atomic activities with no internal subparts defined"
"subTaskDescription" = "Compound activities with subparts represented as a process"
"startEventDescription" = "Indicate the start of a process or subprocess"
"interEventsDescription" = "Indicate that something happened during a process or subprocess after its start event and its end event"
"endEventsDescription" = "Indicate the end of a path in a process or subprocess"
"gatewaysDescription" = "Control how sequence flows interact as they converge and diverge within a process"
"connObjectsDescription" = "Indicate interaction and data flow between activities in a process or subprocess"
"artifactsDescription" = "Provide additional information about the process and do not affect its flow"
"dataObjsDescription" = "Represent physical or information items that are created, manipulated and used during the execution of a process"
"swimLanesDescription" = "Graphical containers for partitioning a set of activities from other activities"
"abstractTaskDescription" = "Task which is not further specified"
"userTaskDescription" = "Task performed by a human with the assistance of a software application"
"serviceTaskDescription" = "Task that uses some sort of service (Web Service or automated application)"
"scriptTaskDescription" = "Task that contains a script executed by the business process engine"
"manualTaskDescription" = "Task that is not managed by the business process engine"
"sendTaskDescription" = "Simple task designed to send a message to an external participant"
"ruleTaskDescription" = "Task that Provides a mechanism for the process to provide input and calculations to a Business Rules Engine"
"ruleTaskDescription" = "Provides a mechanism for the process to provide input and calculations to a Business Rules Engine"
"receiveTaskDescription" = "Simple task designed to wait for a message to arrive from an external participant"
"subProcessDescription" = "Compound activity with subparts represented as a process"
"adhocSubProcessDescription" = "Group of activities that have no required sequence relationships"
"eventSubProcessDescription" = "Group of activities triggered by an event and used for exception handling"
"transactionDescription" = "Group of activities controlled through a transaction protocol"
"normalStartDescription" = "Indicates inmediate start of a process or subprocess"
"messageStartDescription" = "Indicates that the process will start when a message fron an external participant arrives"
"timerStartDescription" = "Indicates that the process will start in a specific time-date or cycle"
"ruleStartDescription" = "Indicates that the process will start when a condition becomes true"
"signalStartDescription" = "Indicates that the process will start when a signal arrives that has been broadcasted from another process"
"multipleStartDescription" = "Indicates that the process will start when one of the multiple required events is triggered"
"parallelStartDescription" = "Indicates that the process will start when all of the multiple required events are triggered"
"scalationStartDescription" = "Indicates the start of an event-subprocess to expedite the completion of a business activity"
"errorStartDescription" = "Indicates the start of an event-subprocess that interrupts its containing process"
"compensationStartDescription" = "Indicates the start of an event-subprocess when a compensation occurs"
"messageInterCatchDescription" = "Wait for a message to arrive from an external participant, then continues"
"messageInterThrowDescription" = "Sends a message to an external participants and continues with the flow"
"timerInterDescription" = "Acts as a delay based on a specific time-date or time cycle"
"errorInterDescription" = "Catches an error from a subprocess"
"cancelInterDescription" = "Activates when a cancelation signal from a transaction is received"
"compensationInterCatchDescription" = "Wait for a Compensation event"
"compensationInterThrowDescription" = "Throws a compensation event indicating that compensation is necessary"
"ruleInterDescription" = "Wait for a condition to become true"
"linkInterCatchDescription" = "Used as target of off-page coneector"
"linkInterThrowDescription" = "Used as source of off-page coneector"
"signalInterCatchDescription" = "Waits for a signal, then continues the flow"
"signalInterThrowDescription" = "Throws a signal"
"multInterCatchDescription" = "Waits for one of the multiple required events to occur"
"multInterThrowDescription" = "Throws all defined events"
"scalInterCatchDescription" = "Catches an escalation signal"
"scalInterThrowDescription" = "Throws an escalation event"
"parallelInterDescription" = "Activates when all of the defined events are catched"
"normalEndDescription" = "Indicates the normal end of a path"
"messageEndDescription" = "Indicates that a message is sent to an external participant at the conclusion of a process"
"errorEndDescription" = "Indicates that a named error should be generated at the conclusion of a subprocess"
"cancelEndDescription" = "Indicates that a transaction should be cancelled"
"compensationEndDescription" = "Indicates that a compensation is necessary"
"signalEndDescription" = "Indicates that a signal will be broadcasted when the end has been reached"
"multipleEndDescription" = "Indicates that all consequences defined will occur"
"scalationEndDescription" = "Indicates that an escalation should be triggered"
"terminateEndDescription" = "Indicates that all activities in the process should be inmediately ended"
"xorGatewayDescription" = "Branches the process flow according to certain conditions evaluated exclusively"
"orGatewayDescription" = "Branches the process flow according to certain conditions evaluated inclusively"
"xorGatewayStartDescription" = "Starts a new process instance when one of the defined events is triggered"
"evtXorGatewayDescription" = "Branches the process flow according to certain events activated exclusively"
"parallelGatewayDescription" = "Branches the process flow creating new simultaneous flows"
"parallelGatewayStartDescription" = "Starts a new process instance when all of the defined events are triggered"
"complexGatewayDescription" = "Facilitates specification of complex synchronization"
"sequenceFlowDescription" = "Represents an orchestation, continues flow between activities"
"condFlowDescription" = "Continues process flow if attached condition becomes true"
"defFlowDescription" = "Enabled when no conditional flow is selected to continue the process"
"msgFlowDescription" = "Represents a message sent between two pools"
"assocFlowDescription" = "Represents an association between data or text annotations and flow elements"
"dirAssocFlowDescription" = "Represents an association between input/output data and flow elements"
"textAnnotationDescription" = "Provides additional text information for the reader of the BPMN Diagram"
"groupDescription" = "Groups graphical elements that are within the same category"
"dataObjDescription" = "Represents a single piece of information that activities require/produce"
"collectionDescription" = "Represents a data collection that activities require/produce"
"dataInputDescription" = "Represents a particular kind of input data required by activities"
"dataOutputDescription" = "Represents a particular kind of data produced by activities"
"dataStoreDescription" = "Represents basic organizational data store, repositorie or database"
"poolDescription" = "Represents a participant collaboration and partitions a process from other pools"
"laneDescription" = "Sub-partition within a Process used to organize and categorize activities"
"callActivityDescription" = "Reuses a previously defined global task or process"
"callTaskDescription" = "Reuses a previously defined global task"
"callManualTaskDescription" = "Reuses a previously defined global manual task"
"callScriptTaskDescription" = "Reuses a previously defined global script task"
"callUserTaskDescription" = "Reuses a previously defined global user task"
"callProcessDescription" = "Reuses a previously defined process"