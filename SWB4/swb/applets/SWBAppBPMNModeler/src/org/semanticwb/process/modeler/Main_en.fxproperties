"appTitle" = "SemanticWebBuilder Process Modeler"
"task" = "Task"
"abstractTask" = "Abstract Task"
"userTask" = "User Task"
"serviceTask" = "Service Task"
"scriptTask" = "Script Task"
"manualTask" = "Manual Task"
"sendTask" = "Send Task"
"receiveTask" = "Receive Task"
"content" = "Application content"
"hideTooltip" = "Hide ToolBar"
"maximizeTooltip" = "Maximize"
"subTask" = "Sub-Task"
"adhocSubProcess" = "AdHoc Sub-Process"
"transaction" = "Transaction"
"subProcess" = "Sub-Process"
"file" = "File"
"new" = "New Diagram"
"open" = "Open Existing Diagram"
"save" = "Save Diagram"
"export" = "Export as Image"
"print" = "Print Diagram"
"about" = "About Modeler"
"startEvents" = "Start Event"
"normalStart" = "Normal Start Event"
"messageStart" = "Message Start Event"
"timerStart" = "Timer Start Event"
"ruleStart" = "Rule Start Event"
"signalStart" = "Signal Start Event"
"multipleStart" = "Multiple Start Event"
"parallelStart" = "Parallel Start Event"
"scalationStart" = "Scalation Start Event"
"errorStart" = "Error Start Event"
"compensationStart" = "Compensation Start Event"
"interEvents" = "Intermediate Event"
"normalInter" = "Normal Intermediate Event"
"messageInterCatch" = "Message Intermediate Event (Catch)"
"messageInterThrow" = "Message Intermediate Event (Throw)"
"timerInter" = "Timer Intermediate Event"
"errorInter" = "Error Intermediate Event"
"cancelInter" = "Cancelation Intermediate Event"
"compensationInterCatch" = "Compensation Intermediate Event (Catch)"
"compensationInterThrow" = "Compensation Intermediate Event (Throw)"
"ruleInter" = "Rule Intermediate Event"
"linkInterCatch" = "Link Intermediate Event (Catch)"
"linkInterThrow" = "Link Intermediate Event (Throw)"
"signalInterCatch" = "Signal Intermediate Event (Catch)"
"signalInterThrow" = "Signal Intermediate Event (Throw)"
"multInterCatch" = "Multiple Intermediate Event (Catch)"
"multInterThrow" = "Multiple Intermediate Event (Throw)"
"scalInterCatch" = "Scalation Intermediate Event (Catch)"
"scalInterThrow" = "Scalation Intermediate Event (Throw)"
"parallelInter" = "Parallel Intermediate Event"
"endEvents" = "End Event"
"normalEnd" = "Normal End Event"
"messageEnd" = "Message End Event"
"errorEnd" = "Error End Event"
"cancelEnd" = "Cancelation End Event"
"compensationEnd" = "Compensation End Event"
"signalEnd" = "Signal End Event"
"multipleEnd" = "Multiple End Event"
"scalationEnd" = "Escalation End Event"
"terminateEnd" = "Termination End Event"
"gateways" = "Gateway"
"xorGateway" = "Exclusive Gateway (Data-based)"
"orGateway" = "Inclusive Gateway (Data-Based)"
"xorGatewayStart" = "Exclusive Start Gateway (Event-based)"
"evtXorGateway" = "Exclusive Gateway (Event-based)"
"parallelGateway" = "Parallel Gateway"
"parallelGatewayStart" = "Parallel Start Gateway (Event-based)"
"complexGateway" = "Complex Gateway"
"connObjects" = "Connection Object"
"sequenceFlow" = "Sequence Flow"
"condFlow" = "Conditional Flow"
"defFlow" = "Default Flow"
"msgFlow" = "Message Flow"
"assocFlow" = "Association"
"dirAssocFlow" = "Directional Association"
"artifacts" = "Artifact"
"textAnnotation" = "Text Annotation"
"group" = "Group"
"dataObjs" = "Data Object"
"dataObj" = "Data"
"collection" = "Data Collection"
"dataInput" = "Data Input"
"dataOutput" = "Data Output"
"dataStore" = "Data Store"
"swimLanes" = "SwimLane"
"pool" = "Pool"
"lane" = "Lane"
"swpFileFilter" = "SWP Diagram Files"
"exportFileFilter" = "PNG Image Files"
"version" = "Version"
"condition" = "Condition"
"message" = "Message"
"msgError1" = "Activity cannot have Sequence Flows coming from Event-based Gateway"
"msgError2" = "Text Annotation must be linked by using non-directional Association"