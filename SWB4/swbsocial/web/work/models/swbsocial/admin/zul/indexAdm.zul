<?xml version="1.0" encoding="UTF-8"?>
<?page style="width:100%;height:100%"?>
<?script content="jq.IE6_ALPHAFIX='.png';"?>
<borderlayout id="main" sclass="minSize" apply="org.semanticwb.social.components.Community">
    <!--Inicia parte superior de pantalla de admin-->
    <north>
		<hbox hflex="true" width="100%" height="70px" align="center" style="background: #424242;">
				<style src="/work/models/swbsocial/admin/css/menuStyle.css" />
				<!--Área de logo-->
                <image src="../img/SWB-Social.png" height="70px"/>
				<separator width="80px"/>
				<!--Inicia área de Menú Superior-->
                <menubar style="" id="mainMenu" apply="org.semanticwb.social.components.SWBSTopMenuComposer" vflex="true"/>
				<!--Termina área de Menú Superior-->
            </hbox>
    </north>
    <!--Termina parte superior de pantalla de admin-->
    <center border="none">
        <borderlayout>
            <!--Inicia árbol de navegación-->
            <west id="" title="SWBSocial" maxsize="600" size="300px" flex="true" collapsible="true" splittable="true">
                <!--vbox spacing="0" width="100%" height="50%,100"-->
                    <window id="swbTreeWindow" apply="org.semanticwb.social.components.tree.SWBSTreeComposer">
                        <zscript>
                            <![CDATA[
                                import org.zkoss.zk.ui.event.*;
                                import org.zkoss.zul.event.TreeDataEvent;
                                import org.semanticwb.social.utils.TreeNodeRefresh;
                                import org.semanticwb.social.components.tree.ElementTreeNode;
                                import org.semanticwb.social.components.tree.AdvancedTreeModel;
                                import org.semanticwb.model.SWBClass;
                                import org.semanticwb.model.SWBModel;
                                import java.util.Locale;
                                import org.semanticwb.SWBUtils;
                                import org.semanticwb.social.utils.SWBSocialResourceUtils;
                                import org.semanticwb.portal.api.SWBParamRequest;
                                import org.semanticwb.model.User;

                                SWBParamRequest paramRequest=(SWBParamRequest)requestScope.get("paramRequest");
                                User user=paramRequest.getUser();
                                EventQueue queOnCreateNode = EventQueues.lookup("insertNode2Tree", EventQueues.SESSION, true);
                                queOnCreateNode.subscribe(new EventListener() {
                                    public void onEvent(Event evt) {
                                        TreeNodeRefresh treeNodeRefresh=(TreeNodeRefresh)evt.getData();
                                        ElementTreeNode treeNode=treeNodeRefresh.getTreeNode();
                                        SWBClass swbClass=treeNodeRefresh.getSWBClass();
                                        SWBSocialResourceUtils.Zkoss.insertTreeNode(treeNode,swbClass);
                                    }
                                });
                                EventQueue queOnRemoveNode = EventQueues.lookup("removeNodo2Tree", EventQueues.SESSION, true);
                                queOnRemoveNode.subscribe(new EventListener() {
                                    public void onEvent(Event evt) {
                                        ElementTreeNode treeItem=(ElementTreeNode)evt.getData();
                                        AdvancedTreeModel advTreeModel=(AdvancedTreeModel)page.getDesktop().getSession().getAttribute("elemenetTreeModel");
                                        advTreeModel.remove(treeItem);
                                    }
                                });
                                EventQueue queOnRefreshNode = EventQueues.lookup("refreshNodo2Tree", EventQueues.SESSION, true);
                                queOnRefreshNode.subscribe(new EventListener() {
                                    public void onEvent(Event evt) {
                                         TreeNode treeItem=(ElementTreeNode)evt.getData();
                                         SWBSocialResourceUtils.Zkoss.refreshNodeFromZul(treeItem);
                                    }
                                });
                                EventQueue queOnUpdateMsgWin = EventQueues.lookup("updateMsgWin", EventQueues.SESSION, true);
                                queOnUpdateMsgWin.subscribe(new EventListener() {
                                    public void onEvent(Event evt) {
                                        String sMsg=(String)evt.getData();
                                        //Messagebox.show(sMsg, "Information",  Messagebox.OK, Messagebox.INFORMATION);
                                        //Label label=(Label)Path.getComponent("/msgWindow/msgLabel");
                                        //label.setStyle("color:green;font-size:14pt");
                                        //label.setValue(sMsg);
                                        //Clients.evalJavaScript("jq('$msgWindow').hide().slideDown(1000)");
                                        //Clients.evalJavaScript("jq('$msgWindow').show().slideUp(1500)");
										Clients.showNotification(sMsg, "", content, "bottom_center", 3000);
                                    }
                                 });
                                //Con el siguiente eventListener se crea una nueva marca al árbol
                                EventQueue queOnCreateNewBrand = EventQueues.lookup("createNewBrand", EventQueues.SESSION, true);
                                queOnCreateNewBrand.subscribe(new EventListener() {
                                    public void onEvent(Event evt) {
                                        ElementTreeNode rootTreeNode=(ElementTreeNode)page.getDesktop().getSession().getAttribute("rootTreeNode");
                                        ElementTreeNode treeItem=(ElementTreeNode)evt.getData();
                                        rootTreeNode.insert(treeItem, rootTreeNode.getChildCount());
                                        String msg_brandCreated=SWBUtils.TEXT.getLocaleString("org.semanticwb.social.components.locales.genericCompMsgs", "msg_brandCreated",new Locale(user.getLanguage()));
                                        SWBSocialResourceUtils.Zkoss.setStatusMessage_Event(msg_brandCreated+":"+treeItem.getData().getName());
                                    }
                                 });
                            ]]>
                        </zscript>
                        
                        <tree id="tree" sizedByContent="true" vflex="true"/>    <!--Para que se vea con + y - para abrir y cerrar nodos, colocar atributo zclass="z-dottree"-->
                        <menupopup id="treePopup"/>
                    </window>
                <!--/vbox-->
            </west>
            <!--termina árbol de navegación-->
            <!--Ventana de mensajes-->
            <!--Inicia área de trabajo (Contenido) -->
            <center id="wrkSpcRoot" border="none" autoscroll="true" vflex="true" hflex="true">
                    <vbox hflex="true" vflex="true">
                        <tabbox hflex="true">
                            <tabs id="tabs_gen"/>
                        </tabbox>
                        <include id="content" mode="defer" progressing="true" vflex="true" hflex="true"/>
                    </vbox>
            </center>
            <!--Termina área de trabajo (Contenido) -->
            <!--Comienza área de widgets-->
            <east title=" " size="15%" flex="true" splittable="true" collapsible="true">
                <borderlayout>
                    <north border="normal" size="50%" splittable="true" collapsible="true">
                        <borderlayout>
                            <north border="normal" title="Pendientes" size="50%" splittable="true" collapsible="true" apply="org.semanticwb.social.components.WidgetGenericComposer">
                               <iframe id="widgetIframe1" style="width:100%; height:100%;"  />
                             </north>
                            <center border="normal"  title="Mensajes Listener">
				<!--div apply="org.semanticwb.social.components.resources.widgets.WidgetListener">
                                <grid model="${$composer.messages}" rowRenderer="org.semanticwb.social.components.resources.widgets.WidgetListenerRenderer"-->
                                <iframe id="widgetIframe2" style="width:100%; height:100%;"  />
                                <!--/div-->
                            </center>
                        </borderlayout>
                    </north>
                    <center border="normal">
                        <borderlayout>
                        <north border="normal" size="50%" title="Mensajes Personales" collapsible="true" apply="org.semanticwb.social.components.WidgetGenericComposer">
				<iframe id="widgetIframe3" style="width:100%; height:100%;"  />
                        </north>
                        <center border="normal"  title="Noticias Comunidad" apply="org.semanticwb.social.components.WidgetGenericComposer">
				<iframe id="widgetIframe4" style="width:100%; height:100%;"  />
                        </center>
                        </borderlayout>
                    </center>
                </borderlayout>
            </east>
            <!--Termina área de widgets-->
        </borderlayout>
    </center>
</borderlayout>
