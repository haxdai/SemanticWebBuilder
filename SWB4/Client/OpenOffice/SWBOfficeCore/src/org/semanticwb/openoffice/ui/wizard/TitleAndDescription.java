/*
 * TitleAndDescription.java
 *
 * Created on 3 de junio de 2008, 10:57 AM
 */
package org.semanticwb.openoffice.ui.wizard;

import java.util.Map;
import javax.swing.JOptionPane;
import org.netbeans.spi.wizard.Wizard;
import org.netbeans.spi.wizard.WizardPage;
import org.netbeans.spi.wizard.WizardPanelNavResult;
import org.semanticwb.openoffice.util.FixedLengthPlainDocument;

/**
 *
 * @author  victor.lorenzana
 */
public class TitleAndDescription extends WizardPage
{
    public static final String TITLE="title";
    public static final String DESCRIPTION="description";
    
    /** Creates new form TitleAndDescription */
    public TitleAndDescription()
    {        
        initComponents();
        if(this.getWizardData(TITLE)!=null)
        {
            this.jLabelName.setText(this.getWizardData(TITLE).toString());
        }
        if(this.getWizardData(DESCRIPTION)!=null)
        {
            this.jTextAreaDescription.setText(this.getWizardData(TITLE).toString());
        }
        this.jTextFieldName.setDocument(new FixedLengthPlainDocument(255));
        this.jTextAreaDescription.setDocument(new FixedLengthPlainDocument(255));
    }

    public static String getDescription()
    {
        return "Información del contenido";                
    }
    /**     * 
     * @param arg
     * @param map
     * @param wizard
     * @return
     */
    @Override
    public WizardPanelNavResult allowNext(String arg,Map map,Wizard wizard)
    {
        WizardPanelNavResult result=WizardPanelNavResult.REMAIN_ON_PAGE;        
        if(this.jTextFieldName.getText().trim().equals(""))
        {            
            JOptionPane.showMessageDialog(null, "¡Debe indicar el título del contenido!",getDescription(), JOptionPane.ERROR_MESSAGE);
            this.jTextFieldName.requestFocus();            
        }
        else if(this.jTextAreaDescription.getText().trim().equals(""))
        {            
            JOptionPane.showMessageDialog(null, "¡Debe indicar la descripción del contenido!",getDescription(), JOptionPane.ERROR_MESSAGE);
            this.jTextAreaDescription.requestFocus();            
        }
        else
        {
            map.put(TITLE, this.jTextFieldName.getText().trim());
            map.put(DESCRIPTION, this.jTextAreaDescription.getText().trim());
            result=WizardPanelNavResult.PROCEED;
        }
        return result;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelName = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();

        jLabelName.setText("Título:");

        jLabelDescription.setText("Descripción:");

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setRows(5);
        jTextAreaDescription.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaDescription);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDescription)
                    .addComponent(jLabelName))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelName))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
}
