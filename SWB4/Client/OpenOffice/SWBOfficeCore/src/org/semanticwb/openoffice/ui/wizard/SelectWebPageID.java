/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelectWebPageID.java
 *
 * Created on 27/01/2009, 06:34:55 PM
 */
package org.semanticwb.openoffice.ui.wizard;

import java.awt.Color;
import java.util.Map;
import javax.swing.JOptionPane;
import org.netbeans.spi.wizard.Wizard;
import org.netbeans.spi.wizard.WizardPage;
import org.netbeans.spi.wizard.WizardPanelNavResult;
import org.semanticwb.office.interfaces.WebPageInfo;
import org.semanticwb.office.interfaces.WebSiteInfo;
import org.semanticwb.openoffice.OfficeApplication;

/**
 *
 * @author victor.lorenzana
 */
public class SelectWebPageID extends WizardPage
{

    public static final String WEBPAGEID = "WEBPAGEID";

    /** Creates new form SelectWebPageID */
    public SelectWebPageID()
    {
        initComponents();
    }

    public static String getDescription()
    {
        return "Identificador de página";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldWebPageID = new javax.swing.JTextField();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jLabel1.setText("Identificador de página:");

        jTextFieldWebPageID.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldWebPageID, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldWebPageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(228, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_formKeyTyped
    {//GEN-HEADEREND:event_formKeyTyped
        this.jTextFieldWebPageID.setToolTipText("");        
        WebPageInfo page = (WebPageInfo)this.getWizardData(SelectPage.WEBPAGE);
        WebSiteInfo site = new WebSiteInfo();
        site.id=page.siteID;
        try
        {
            boolean exists = OfficeApplication.getOfficeApplicationProxy().existsPage(site, this.jTextFieldWebPageID.getText());
            if (exists)
            {
                this.jTextFieldWebPageID.setBackground(Color.YELLOW);
                this.jTextFieldWebPageID.setToolTipText("El Identificador ya exite");
            }
            else
            {
                this.jTextFieldWebPageID.setBackground(Color.WHITE);
                this.jTextFieldWebPageID.setToolTipText("El Identificador no exite");
            }
        }
        catch (Exception e)
        {
        }
    }//GEN-LAST:event_formKeyTyped

    @Override
    public WizardPanelNavResult allowNext(String arg, Map map, Wizard wizard)
    {
        return allowFinish(arg, map, wizard);
    }

    @Override
    public WizardPanelNavResult allowFinish(String arg, Map map, Wizard wizard)
    {
        WizardPanelNavResult result = WizardPanelNavResult.REMAIN_ON_PAGE;
        if (jTextFieldWebPageID.getText().isEmpty())
        {
            jTextFieldWebPageID.requestFocus();
            JOptionPane.showMessageDialog(this, "¡Debe indicar un identificador!", getDescription(), JOptionPane.OK_OPTION | JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            map.put(WEBPAGEID, jTextFieldWebPageID.getText());
            result = WizardPanelNavResult.PROCEED;
        }
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldWebPageID;
    // End of variables declaration//GEN-END:variables
}
